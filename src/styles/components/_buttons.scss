@use '../mixins/buttons' as buttons_mixins;
@use '../config/buttons' as vars;
@use '../functions/buttons' as bf;
@use '../mixins/mediaqueries' as mq;
@use 'sass:map';
@use 'sass:list';

.btn {
  @include buttons_mixins.button-initial(
    map.get(vars.$button-theme-colors, 'initial'),
    bf.get-button-state('initial', 'main'),
    bf.get-button-state('initial', 'main-hover'),
    bf.get-button-state('initial', 'main-active'),
    bf.get-button-state('initial', 'text-color'),
    bf.get-button-state('initial', 'border-color')
  );

  --btn-padding: #{vars.$btn-padding-y} #{vars.$btn-padding-x};
  --btn-font-size: #{vars.$btn-font-size};
  --btn-line-height: #{vars.$btn-line-height};

  --btn-square-size: #{vars.$btn-square-size};

  // Bordes
  --btn-border-disabled: 0;
  --btn-border-radius: #{vars.$btn-border-radius};

  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  box-sizing: border-box;
  padding: var(--btn-padding);
  gap: 0.5rem;
  font-size: var(--btn-font-size);
  line-height: var(--btn-line-height);
  cursor: pointer;
  border: var(--btn-border);
  border-radius: var(--btn-border-radius);
  background-color: var(--btn-bg);
  color: var(--btn-color);
  transition: all 0.2s;
  user-select: none;
  // min-width: var(--btn-min-width);
  width: max-content;

  &:hover,
  &-link:hover {
    background-color: var(--btn-bg-hover);
    color: var(--btn-color-hover);
    // transform: scale(1.02);
  }

  &:active,
  &-link:active {
    background-color: var(--btn-bg-active);
  }

  &.ghost-active {
    background-color: var(--btn-ghost-bg-active);
    color: var(--btn-ghost-color-active);
    border: var(--btn-border);
  }

  &:disabled {
    user-select: none;
    pointer-events: none;
  }

  &-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: var(--btn-font-size);
  }

  &-label {
    display: inline-flex;
    align-items: center;
  }

  &-square {
    aspect-ratio: 1;
    height: calc(var(--btn-square-size) * 2);
    width: calc(var(--btn-square-size) * 2);
    padding: 0;
    font-size: var(--btn-font-size) !important;

    & > span {
      // height: calc(var(--btn-line-height) * var(--btn-font-size));
      // width: calc(var(--btn-line-height) * var(--btn-font-size));
      height: calc(var(--btn-line-height) * var(--btn-font-size));
      display: inline-flex;
    }
  }

  &-block {
    width: 100%;
    display: flex;
  }

  &.btn-link {
    color: var(--btn-color);
    text-decoration: none;

    &:hover {
      color: var(--btn-color-hover);
    }

    &:active {
      color: var(--btn-color-active);
    }

    &:visited {
      color: var(--btn-color);
    }

    &[class*='ghost'] {
      color: var(--btn-color);

      &:hover {
        color: var(--btn-color-hover);
      }
    }
  }

  .btn-badge {
    position: absolute;
    top: -5px;
    left: 80%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 24px;
    height: 24px;
    padding: 0 6px;
    border-radius: 9999px;
    z-index: 1;

    @include mq.screen('min', 'md') {
      top: -10px;
      left: 90%;
    }
  }
}

@each $size, $values in vars.$buttons-sizes {
  .btn-#{$size} {
    --btn-padding: #{list.nth($values, 1)} #{list.nth($values, 2)};
    --btn-font-size: #{list.nth($values, 3)};
    --btn-line-height: #{list.nth($values, 4)};
    --btn-min-width: #{list.nth($values, 5)};
    --btn-square-size: #{list.nth($values, 6)};
    --btn-border-radius: #{list.nth($values, 7)};
  }
}

@each $theme, $color in vars.$button-theme-colors {
  .btn-#{$theme} {
    @include buttons_mixins.button-variant(
      $color,
      bf.get-button-state($theme, 'main'),
      bf.get-button-state($theme, 'main-hover'),
      bf.get-button-state($theme, 'main-active'),
      bf.get-button-state($theme, 'text-color'),
      bf.get-button-state($theme, 'border-color'),
      bf.get-button-state($theme, 'disabled'),
      bf.get-button-state($theme, 'disabled-text'),
      bf.get-button-state($theme, 'disabled-border'),
    );
  }

  .btn-#{$theme}-ghost {
    @include buttons_mixins.button-ghost-variant(
      $color,
      bf.get-button-state($theme, 'main'),
      bf.get-button-state($theme, 'main-hover-ghost'),
      bf.get-button-state($theme, 'main-active-ghost'),
      bf.get-button-state($theme, 'text-color-ghost'),
      bf.get-button-state($theme, 'text-color-ghost-hover')
    );
  }
}

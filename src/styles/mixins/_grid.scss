@use '../config/grid' as grid;
@use '../config/breakpoints' as bp;
@use '../mixins/mediaqueries' as mq;

@mixin generate-grid-cols($property, $prefix) {
  @for $i from 1 through grid.$grid-columns {
    .#{$prefix}-#{$i} {
      #{$property}: span #{$i};
    }
  }

  @each $breakpoint, $width in bp.$breakpoints {
    @include mq.screen('min', $breakpoint) {
      @for $i from 1 through grid.$grid-columns {
        .#{$prefix}-#{$breakpoint}-#{$i} {
          #{$property}: span #{$i};
        }
      }
    }
  }
}

@mixin generate-grid-offsets($prefix: 'offset') {
  @for $i from 1 through grid.$grid-columns {
    .#{$prefix}-#{$i} {
      grid-column-start: $i;
      grid-column-end: #{grid.$grid-columns +
        1}; // termina en la última columna
    }
  }

  // Responsive con breakpoints
  @each $breakpoint, $width in bp.$breakpoints {
    @include mq.screen('min', $breakpoint) {
      @for $i from 1 through grid.$grid-columns {
        .#{$prefix}-#{$breakpoint}-#{$i} {
          grid-column-start: $i;
          grid-column-end: #{grid.$grid-columns + 1};
        }
      }
    }
  }
}

@mixin generate-grid-template-cols($prefix: 'grid-col') {
  // Clases básicas
  .#{$prefix}-auto {
    grid-template-columns: auto;
  }
  .#{$prefix}-1fr {
    grid-template-columns: 1fr;
  }
  .#{$prefix}-auto-1fr {
    grid-template-columns: auto 1fr;
  }
  .#{$prefix}-1fr-auto {
    grid-template-columns: 1fr auto;
  }

  // Responsive
  @each $breakpoint, $width in bp.$breakpoints {
    @include mq.screen('min', $breakpoint) {
      .#{$prefix}-#{$breakpoint}-auto {
        grid-template-columns: auto;
      }
      .#{$prefix}-#{$breakpoint}-1fr {
        grid-template-columns: 1fr;
      }
      .#{$prefix}-#{$breakpoint}-auto-1fr {
        grid-template-columns: auto 1fr;
      }
      .#{$prefix}-#{$breakpoint}-1fr-auto {
        grid-template-columns: 1fr auto;
      }
    }
  }
}

@use 'sass:map';
@use '../config/breakpoints' as bp;

$flexbox-classes: (
  'display': (
    property: display,
    class: d,
    values: inline inline-block block grid inline-grid flex inline-flex none,
  ),
  'align-items': (
    property: align-items,
    class: align-items,
    values: flex-start flex-end center baseline stretch,
  ),
  'justify-content': (
    property: justify-content,
    class: justify-content,
    values: flex-start flex-end center space-between space-around space-evenly,
  ),
  'flex-direction': (
    property: flex-direction,
    class: flex-direction,
    values: row row-reverse column column-reverse,
  ),
  'text-center': (
    property: text-align,
    class: text,
    values: start end center justify,
  ),
  'position': (
    property: position,
    class: position,
    values: static relative absolute fixed sticky,
  ),
  'z-index': (
    property: z-index,
    class: z-index,
    values: 1 2 3 4 5 6 7 8 9 10 11 12,
  ),
  'right': (
    property: right,
    class: right,
    values: 0 auto,
  ),
  'left': (
    property: left,
    class: left,
    values: 0 auto,
  ),
  'width': (
    property: width,
    class: w,
    values: 25 50 75 100 auto,
    measurement: '%',
  ),
  'height': (
    property: height,
    class: h,
    values: 25 50 75 100 auto,
    measurement: '%',
  ),
  'white-space': (
    property: white-space,
    class: white-space,
    values: normal nowrap pre pre-wrap pre-line,
  ),
  'overflow': (
    property: overflow,
    class: overflow,
    values: visible hidden clip scroll auto,
  ),
  'grid-gap': (
    property: gap,
    class: gap,
    values: 1 2 3 4 5,
    measurement: 'rem',
  ),
);

@each $property-name, $property-values in $flexbox-classes {
  $property-property: map.get($property-values, property);
  $property-class: map.get($property-values, class);
  $measurement: map.get($property-values, measurement);

  @each $value in map.get($property-values, values) {
    $class-name: #{$property-class}-#{$value};
    .#{$class-name} {
      @if $measurement {
        #{$property-property}: #{$value}#{$measurement}; // Aplica unidad si existe
      } @else {
        #{$property-property}: #{$value}; // Sin unidad
      }
    }

    // Clases responsivas
    @each $breakpoint, $breakpoint-value in bp.$breakpoints {
      $responsive-class-name: #{$property-class}-#{$breakpoint}-#{$value};
      @media (min-width: $breakpoint-value) {
        .#{$responsive-class-name} {
          @if $measurement {
            #{$property-property}: #{$value}#{$measurement} !important;
          } @else {
            #{$property-property}: #{$value} !important;
          }
        }
      }
    }
  }
}

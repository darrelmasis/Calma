@use '../mixins/mediaqueries' as mq;
@use '../config/colors_map' as colors;
@use '../functions/colors' as fn;
@use '../config/colors' as pallette;
@use 'sass:map';

.tabPanel {
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
  will-change: opacity;
}

.tabPanel.visible {
  display: block;
  opacity: 1;
}

.tabPanel.hidden {
  display: none;
  opacity: 0;
}

.border-dotted {
  border-bottom: 1px dotted fn.getColor(pallette.$golds, '200'); /* ajusta color/grosor */
  flex-grow: 0.95;
  margin-top: 0.5rem;
}

.menu-card {
  &-header {
    height: 10rem;
    transition: all 1s ease;

    & img {
      transition: transform 0.3s ease;
    }
  }

  &:hover &-header img {
    transform: scale(1.05);
  }

  &-wrapper {
    box-shadow:
      0 2px 6px rgba(0, 0, 0, 0.12),
      0 1px 3px rgba(0, 0, 0, 0.08);
    overflow: hidden;
  }

  &-content {
    position: relative;
    // max-height: 13.35375rem;
    // transition: 0.3s ease;

    &.expanded ~ .menu-card-footer {
      background-color: fn.getColor(pallette.$lights, '200');

      & .menu-card-footer--expandable {
        flex-flow: column-reverse;
      }
    }
  }

  &-items {
    position: relative;
    max-height: 12.5rem;
    transition: 0.3s ease;
    overflow-y: hidden;
    overflow-x: visible;
    &:nth-last-child(1) {
      margin-bottom: 1rem;
    }
  }

  &-footer {
    // padding a todos los footers
    background-color: fn.getColor(pallette.$lights, '200');

    &--expandable,
    &--static,
    &--minimal {
      min-height: 60px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      color: colors.$text-color;
    }

    &--expandable {
      cursor: pointer;
      transition: 0.3s ease;
      position: relative;
      // background-color: fn.getColor(pallette.$golds, '50');

      &:hover {
        background-color: fn.getColor(pallette.$lights, '300');
      }

      // &:before {
      //   content: '';
      //   display: block;
      //   position: absolute;
      //   top: 0;
      //   width: calc(80% - 2rem);
      //   height: 1px;
      //   background-color: colors.$border-color;
      // }
      gap: 0;
    }

    &--static {
      // background-color: fn.getColor(pallette.$golds, '100');
    }

    &--minimal {
      // color: colors.$primary;
    }
  }
}

.service {
  font-size: 1rem;
  line-height: 2;
  &-title {
    flex-grow: 1;
    &:after {
      content: '';
      display: inline-flex;
      border-bottom: 1px dotted fn.getColor(pallette.$darks, '200'); /* ajusta color/grosor */
      flex-grow: 0.95;
      margin-left: 0.5rem;
      margin-top: 0.5rem;
    }
  }
  &-description {
    min-height: 1.5rem;
  }
}

.service-partial-description {
  max-width: 200px;
  // background: linear-gradient(to right, currentColor 0%, transparent 100%);
  // -webkit-background-clip: text;
  // -webkit-text-fill-color: transparent;
  transition: 0.3s ease;

  & ~ .popover-view-more {
    cursor: pointer;
    &:hover {
      text-decoration: underline;
    }
  }
}

.service-item-option-button {
  cursor: pointer;
}
